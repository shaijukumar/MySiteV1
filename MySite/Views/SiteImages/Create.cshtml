


@using (Html.BeginForm("Index", "SiteImages", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    <div> <img id="user_img" height="100" width="90" style="border:solid" /> </div>
    <div>
        <input type="file" title="search image" id="file" name="file" onchange="show(this)" />
    </div>
    <div>Content Id</div>
    <div>
        <input type="text" id="txt_ContentDataId" name="ContentDataId" />
    </div>
    <div>File Name</div>
    <div>
        <input type="text" id="txt_name" name="Name" />
    </div>
    <div>
        <input type="submit" title="save" />
    </div>

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>



}

@section Scripts {
    <script type="text/JavaScript">

        $(document).ready(function () {
            //debugger;
            var ContentDataId = GetQueryStringParams("ContentDataId");
            $('#txt_ContentDataId').val(ContentDataId);
        });

        function GetQueryStringParams(sParam) {
            var sPageURL = window.location.search.substring(1);
            var sURLVariables = sPageURL.split('&');
            for (var i = 0; i < sURLVariables.length; i++) {
                var sParameterName = sURLVariables[i].split('=');
                if (sParameterName[0] == sParam) {
                    return sParameterName[1];
                }
            }
        }

        function show(input) {
            if (input.files && input.files[0]) {
                //debugger;
                $('#txt_name').val(input.files[0].name);
                var filerdr = new FileReader();
                filerdr.onload = function (e) {
                    $('#user_img').attr('src', e.target.result);
                }
                filerdr.readAsDataURL(input.files[0]);
            }
        }
    </script>
}
ccc
<div id="myContainer"></div>

<!--All Required REACTJS Lib-->
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.3.2/react.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/react/15.3.2/react-dom.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/remarkable/1.7.1/remarkable.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.0/prop-types.js"></script>


<script src="@Url.Content("~/Scripts/jsx/test.jsx")"></script>



@*@model MySite.Models.SiteImages

    @{
        ViewBag.Title = "Create";
    }

    <h2>Create</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SiteImages</h4>
        <hr />

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <img id="user_img" height="100" width="90" style="border:solid" />
        </div>

        <div class="form-group">
            <div class="col-md-10">
                <input type="file" title="search image" id="file" name="file" onchange="show(this)" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-10">
                File Name
            </div>
            <div class="col-md-10">
                <input type="file" title="search image" id="file" name="file" onchange="show(this)" />
            </div>
        </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContentDataId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ContentDataId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ContentDataId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Image_url, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Image_url, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Image_url, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@



