

@model MySite.Models.ContentData

@{
    ViewBag.Title = "Create";
}

<script src="~/Theme/ckeditor/ckeditor.js"></script>
<script src="~/Scripts/jquery-3.3.1.min.js"></script>

<script type="text/javascript">


    $(function () {
        
        $('.btnSubmit').click(function () {  
            
            var CategoryId = $("#CategoryId").val();  
            var Title = $("#Title").val();  
            var URLString = $("#URLString").val();            
            var Content = CKEDITOR.instances['ContentCKEdit'].getData(); 
            debugger;

            if (Content) {                
                Content = $('<div/>').text(Content).html()
            }

            var data = new FormData();
            data.append("CategoryId", CategoryId);
            data.append("Title", Title);
            data.append("URLString", URLString);
            data.append("Content", Content);
            

            // Make Ajax request with the contentType = false, and procesDate = false
            var ajaxRequest = $.ajax({
                type: "POST",
                url: "http://localhost:49962/api/CreateContent",
                contentType: false,
                processData: false,
                data: data,
                success: function (result) {
                    if (result.Success) {
                        window.location.href = "/ContentDatas/Edit/" + result.ItemID; 
                    }
                    else {
                        alert(result.Message);
                    }
                   
                },
                error: function (err) {
                    alert(JSON.stringify(err));
                }
            });
             
           
        });

        


    });

</script>

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ContentData</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", @id = "CategoryId" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                <a target="_blank" href="/Categories/Create">New Category</a>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @id = "Title" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.URLString, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.URLString, new { htmlAttributes = new { @class = "form-control", @id = "URLString" } })
                @Html.ValidationMessageFor(model => model.URLString, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @placeholder = "ContentCKEdit", @id = "ContentCKEdit" })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                <script>
                    CKEDITOR.replace("ContentCKEdit");
                </script>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Create" class="btn btn-default" />*@
                <input type="button" class="customPurple btnSubmit" id="btnSubmit" value="SUBMIT">
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

